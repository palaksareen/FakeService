
package uk.co.o2.soa.sendmessageservice_1_1;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import uk.co.o2.soa.coredata_1.ServiceResultType;
import uk.co.o2.soa.coredata_1.TypeYesOrNo;
import uk.co.o2.soa.sendmessagedata_1.ChargingInformation;
import uk.co.o2.soa.sendmessagedata_1.CustomMsgParametersType;
import uk.co.o2.soa.sendmessagedata_1.CustomerparametersType;
import uk.co.o2.soa.sendmessagedata_1.Format;
import uk.co.o2.soa.sendmessagedata_1.MessagePriority;
import uk.co.o2.soa.sendmessagedata_1.MessageRecipient;
import uk.co.o2.soa.sendmessagedata_1.MessageType;
import uk.co.o2.soa.sendmessagedata_1.MsisdnList;
import uk.co.o2.soa.sendmessagedata_1.MsisdnUnlimitedList;
import uk.co.o2.soa.sendmessagedata_1.RecipientAddress;
import uk.co.o2.soa.sendmessagedata_1.RecipientAddress1;
import uk.co.o2.soa.sendmessagedata_1.ResultType;
import uk.co.o2.soa.sendmessagedata_1.SendEmailDetailsType;
import uk.co.o2.soa.sendmessagedata_1.SendSMSDetailsType;
import uk.co.o2.soa.sendmessagedata_1.SenderAddress;
import uk.co.o2.soa.sendmessagedata_1.SenderAddress1;
import uk.co.o2.soa.sendmessagedata_1.SimpleReference;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SendMessagePortType", targetNamespace = "http://soa.o2.co.uk/sendmessageservice_1_1")
@XmlSeeAlso({
    uk.co.o2.soa.coredata_1.ObjectFactory.class,
    uk.co.o2.soa.sendmessagedata_1.ObjectFactory.class
})
public interface SendMessagePortType {


    /**
     * This operation is used to send SMS message
     * 
     * @param mtProfile
     * @param subMerchantId
     * @param messageType
     * @param msisdnList
     * @param applicationReference
     * @param receiptURL
     * @param message
     * @param ttl
     * @return
     *     returns uk.co.o2.soa.sendmessagedata_1.ResultType
     * @throws SendSMSFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
    @RequestWrapper(localName = "sendSMS", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendSMS")
    @ResponseWrapper(localName = "sendSMSResponse", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendSMSResponse")
    public ResultType sendSMS(
        @WebParam(name = "mtProfile", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String mtProfile,
        @WebParam(name = "msisdnList", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        MsisdnList msisdnList,
        @WebParam(name = "receiptURL", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String receiptURL,
        @WebParam(name = "message", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String message,
        @WebParam(name = "messageType", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        MessageType messageType,
        @WebParam(name = "ttl", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        int ttl,
        @WebParam(name = "applicationReference", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String applicationReference,
        @WebParam(name = "subMerchantId", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String subMerchantId)
        throws SendSMSFault
    ;

    /**
     * This operation is used send MMS messages
     * 
     * @param senderAddress
     * @param receiptRequest
     * @param subject
     * @param charging
     * @param msisdnList
     * @param priority
     * @return
     *     returns java.lang.String
     * @throws SendMMSFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
    @RequestWrapper(localName = "sendMMS", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendMMS")
    @ResponseWrapper(localName = "sendMMSResponse", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendMMSResponse")
    public String sendMMS(
        @WebParam(name = "msisdnList", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        MsisdnUnlimitedList msisdnList,
        @WebParam(name = "senderAddress", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String senderAddress,
        @WebParam(name = "subject", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String subject,
        @WebParam(name = "priority", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        MessagePriority priority,
        @WebParam(name = "charging", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        ChargingInformation charging,
        @WebParam(name = "receiptRequest", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        SimpleReference receiptRequest)
        throws SendMMSFault
    ;

    /**
     * This operation is used to send Email messages
     * 
     * @param senderAddress
     * @param subject
     * @param format
     * @param disclaimerMessage
     * @param message
     * @param toAddress
     * @return
     *     returns uk.co.o2.soa.coredata_1.ServiceResultType
     * @throws SendEmailFault
     */
    @WebMethod
    @WebResult(name = "status", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
    @RequestWrapper(localName = "sendEmail", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendEmail")
    @ResponseWrapper(localName = "sendEmailResponse", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendEmailResponse")
    public ServiceResultType sendEmail(
        @WebParam(name = "senderAddress", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        SenderAddress senderAddress,
        @WebParam(name = "toAddress", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        RecipientAddress toAddress,
        @WebParam(name = "subject", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String subject,
        @WebParam(name = "format", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        Format format,
        @WebParam(name = "message", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String message,
        @WebParam(name = "disclaimerMessage", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String disclaimerMessage)
        throws SendEmailFault
    ;

    /**
     * 
     * @param subMerchantId
     * @param queryTransactionId
     * @param applicationReference
     * @return
     *     returns uk.co.o2.soa.sendmessagedata_1.ResultType
     * @throws QueryReceiptStatusFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
    @RequestWrapper(localName = "queryReceiptStatus", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.QueryReceiptStatus")
    @ResponseWrapper(localName = "queryReceiptStatusResponse", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.QueryReceiptStatusResponse")
    public ResultType queryReceiptStatus(
        @WebParam(name = "queryTransactionId", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String queryTransactionId,
        @WebParam(name = "applicationReference", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String applicationReference,
        @WebParam(name = "subMerchantId", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String subMerchantId)
        throws QueryReceiptStatusFault
    ;

    /**
     * 
     * @param subMerchantId
     * @param messageType
     * @param mtprofile
     * @param msisdnList
     * @param applicationReference
     * @param originator
     * @param receiptURL
     * @param message
     * @param ttl
     * @return
     *     returns uk.co.o2.soa.sendmessagedata_1.ResultType
     * @throws SendDynamicSMSFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
    @RequestWrapper(localName = "sendDynamicSMS", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendDynamicSMS")
    @ResponseWrapper(localName = "sendDynamicSMSResponse", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendDynamicSMSResponse")
    public ResultType sendDynamicSMS(
        @WebParam(name = "msisdnList", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        MsisdnList msisdnList,
        @WebParam(name = "originator", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String originator,
        @WebParam(name = "receiptURL", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String receiptURL,
        @WebParam(name = "message", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        Object message,
        @WebParam(name = "messageType", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        MessageType messageType,
        @WebParam(name = "ttl", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        int ttl,
        @WebParam(name = "mtprofile", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String mtprofile,
        @WebParam(name = "applicationReference", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String applicationReference,
        @WebParam(name = "subMerchantId", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String subMerchantId)
        throws SendDynamicSMSFault
    ;

    /**
     * 
     * @param subMerchantId
     * @param messageType
     * @param mtprofile
     * @param messageRecipient
     * @param applicationReference
     * @param receiptURL
     * @param ttl
     * @return
     *     returns uk.co.o2.soa.sendmessagedata_1.ResultType
     * @throws SendMultiSMSFault
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
    @RequestWrapper(localName = "sendMultiSMS", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendMultiSMS")
    @ResponseWrapper(localName = "sendMultiSMSResponse", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendMultiSMSResponse")
    public ResultType sendMultiSMS(
        @WebParam(name = "receiptURL", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String receiptURL,
        @WebParam(name = "messageType", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        MessageType messageType,
        @WebParam(name = "ttl", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        int ttl,
        @WebParam(name = "mtprofile", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String mtprofile,
        @WebParam(name = "messageRecipient", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        List<MessageRecipient> messageRecipient,
        @WebParam(name = "applicationReference", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String applicationReference,
        @WebParam(name = "subMerchantId", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String subMerchantId)
        throws SendMultiSMSFault
    ;

    /**
     * This operation is used to send Email messages with attachment
     * 
     * @param senderAddress
     * @param subject
     * @param format
     * @param disclaimerMessage
     * @param message
     * @param toAddress
     * @return
     *     returns uk.co.o2.soa.coredata_1.ServiceResultType
     * @throws SendEmailWithAttachment1Fault
     */
    @WebMethod(operationName = "sendEmailWithAttachment_1")
    @WebResult(name = "status", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
    @RequestWrapper(localName = "sendEmailWithAttachment_1", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendEmailWithAttachment1")
    @ResponseWrapper(localName = "sendEmailWithAttachment_1Response", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendEmailWithAttachment1Response")
    public ServiceResultType sendEmailWithAttachment1(
        @WebParam(name = "senderAddress", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        SenderAddress1 senderAddress,
        @WebParam(name = "toAddress", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        RecipientAddress1 toAddress,
        @WebParam(name = "subject", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String subject,
        @WebParam(name = "format", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        Format format,
        @WebParam(name = "message", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String message,
        @WebParam(name = "disclaimerMessage", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String disclaimerMessage)
        throws SendEmailWithAttachment1Fault
    ;

    /**
     * This operation is used to send Notification 
     * 
     * @param customerparameters
     * @param password
     * @param smsTemplateID
     * @param emailTemplateID
     * @param userName
     * @param msisdn
     * @param productType
     * @return
     *     returns uk.co.o2.soa.coredata_1.ServiceResultType
     * @throws SendNotification1Fault
     */
    @WebMethod(operationName = "sendNotification_1")
    @WebResult(name = "status", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
    @RequestWrapper(localName = "sendNotification_1", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendNotification1")
    @ResponseWrapper(localName = "sendNotification_1Response", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendNotification1Response")
    public ServiceResultType sendNotification1(
        @WebParam(name = "userName", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String userName,
        @WebParam(name = "password", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String password,
        @WebParam(name = "msisdn", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String msisdn,
        @WebParam(name = "smsTemplateID", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String smsTemplateID,
        @WebParam(name = "emailTemplateID", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String emailTemplateID,
        @WebParam(name = "productType", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String productType,
        @WebParam(name = "customerparameters", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        CustomerparametersType customerparameters)
        throws SendNotification1Fault
    ;

    /**
     * This operation is used to send messages only for MOJ customers 
     * 
     * @param messageType
     * @param mtprofile
     * @param originator
     * @param msisdn
     * @param receiptURL
     * @param message
     * @param ttl
     * @return
     *     returns uk.co.o2.soa.sendmessagedata_1.ResultType
     * @throws SendClientFilteredSMS1Fault
     */
    @WebMethod(operationName = "sendClientFilteredSMS_1")
    @WebResult(name = "result", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
    @RequestWrapper(localName = "sendClientFilteredSMS_1", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendClientFilteredSMS1")
    @ResponseWrapper(localName = "sendClientFilteredSMS_1Response", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendClientFilteredSMS1Response")
    public ResultType sendClientFilteredSMS1(
        @WebParam(name = "msisdn", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String msisdn,
        @WebParam(name = "originator", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String originator,
        @WebParam(name = "receiptURL", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String receiptURL,
        @WebParam(name = "message", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        Object message,
        @WebParam(name = "messageType", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        MessageType messageType,
        @WebParam(name = "ttl", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        int ttl,
        @WebParam(name = "mtprofile", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String mtprofile)
        throws SendClientFilteredSMS1Fault
    ;

    /**
     * This operation is used to send push notifications 
     * 
     * @param eventId
     * @param sendEmail
     * @param sendSMS
     * @param sendEmailDetails
     * @param customMsgParameters
     * @param sendSMSDetails
     * @param autoRouting
     * @param msisdn
     * @param pushNotificationTransactionId
     * @param status
     * @throws SendNotificationMessage1Fault
     */
    @WebMethod(operationName = "sendNotificationMessage_1")
    @RequestWrapper(localName = "sendNotificationMessage_1", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendNotificationMessage1")
    @ResponseWrapper(localName = "sendNotificationMessage_1Response", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", className = "uk.co.o2.soa.sendmessagedata_1.SendNotificationMessage1Response")
    public void sendNotificationMessage1(
        @WebParam(name = "eventId", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String eventId,
        @WebParam(name = "msisdn", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String msisdn,
        @WebParam(name = "customMsgParameters", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        CustomMsgParametersType customMsgParameters,
        @WebParam(name = "sendSMS", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        TypeYesOrNo sendSMS,
        @WebParam(name = "sendSMSDetails", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        SendSMSDetailsType sendSMSDetails,
        @WebParam(name = "sendEmail", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        TypeYesOrNo sendEmail,
        @WebParam(name = "sendEmailDetails", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        SendEmailDetailsType sendEmailDetails,
        @WebParam(name = "autoRouting", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1")
        String autoRouting,
        @WebParam(name = "status", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", mode = WebParam.Mode.OUT)
        Holder<ServiceResultType> status,
        @WebParam(name = "pushNotificationTransactionId", targetNamespace = "http://soa.o2.co.uk/sendmessagedata_1", mode = WebParam.Mode.OUT)
        Holder<String> pushNotificationTransactionId)
        throws SendNotificationMessage1Fault
    ;

}
